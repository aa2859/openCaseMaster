@using openCaseMaster.ViewModels
@model taskModel_add

@section Scripts {
    @Styles.Render("~/Content/bootstrap-select")
    @Scripts.Render("~/bundles/bootstrap-select")

    @Scripts.Render("~/bundles/jqueryval")



    <link rel="stylesheet" href="/Content/editormd.css" />
    <script src="/Scripts/editormd.js"></script>



    <script type="text/javascript">


        $(function () {

            editormd("editormd", {
                name: "body",
                theme: "dark",
                //previewTheme: "dark",
                //editorTheme: "pastel-on-dark",
                toolbarIcons: function () {
                    return ["undo", "redo", "|", "watch", "preview", "|", "bold", "del", "italic", "hr", "|", "h1", "h2", "h3", "|", "link", "image", "emoji", "table", "code-block", "datetime", "||", "watch", "preview"]
                },
                watch: false,
                height: 620,
                path: '/Scripts/editormd/lib/',
                markdown: localStorage["addTask"],
                emoji: true,
                delay: 1000,
                onchange: function () {
                    localStorage.setItem("addTask", this.getMarkdown());
                }


            });

            initscript();


        });


        function initscript() {
            if (localStorage["addTaskscript"]) {
                $("#scripts").val(localStorage["addTaskscript"]);

                var data = $.parseJSON(localStorage["addTaskscript"]);
                var i = 1;
                $("#scriptTable tbody").empty();
                for (var d in data) {
                    var p = data[d];
                    var tr = document.createElement("tr");
                    var td1 = tr.insertCell();
                    td1.innerHTML = i++;
                    var td2 = tr.insertCell();
                    td2.innerHTML = p.title;
                    $("#scriptTable tbody").append(tr);
                }
            }
        }
    </script>

}


<br />

@using (Html.BeginForm("add", "PublicTask", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.ValidationMessageFor(m => m.node, "", new { @class = "text-danger"  })
    <div class="panel panel-default">
        <div class="panel-heading">发布新任务</div>
        <div class="panel-body">
            <div class="form-group">
                <div class="input-group">
                    <span class="node-select input-group-btn">
                        @Html.DropDownListFor(t => t.node, ViewBag.nodes as List<SelectListItem>, new { @class = "selectpicker", @data_live_search = "true", @data_width = "140px" })
                    </span>
                    @Html.TextBoxFor(m => m.title, new { @class = "form-control", @placeholder = "在这里填写标题" })
                </div>
            </div>
            <ul id="myTab" class="nav nav-tabs" style="border-bottom:0px;">
                <li class="active">
                    <a href="#edit" data-toggle="tab">主题描述</a>
                </li>
            </ul>
            <div id="myTabContent" class="tab-content">
                <div class="tab-pane fade in active" id="edit">
                    <div id="editormd"></div>
                </div>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="保存" class="btn btn-primary col-xs-2" />

                <div class="pull-right"><a href="/markdown/help" target="_blank"><i class="fa fa-tip"></i> 排版说明</a></div>
            </div>


        </div>
    </div>

}


